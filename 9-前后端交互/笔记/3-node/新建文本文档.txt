# 目标：

* 能够知道如何配置 MySQL 数据库环境
* 能够认知并使用常见的 SQL 语句操作数据库
* 能够在 Express 中操作 MySQL 数据库
* 能够了解 Session 的实现原理
* 能够了解 JWT 的实现原理

# 1. 数据库的基本概念

### 1.1 什么是数据库

数据库（database）是用来**组织、存储和管理**数据的仓库。

为了方便管理互联网中的数据，就有了数据库管理系统的概念（简称：数据库）。用户可以对数据库中的数据进行**新增、查询、更新、删除**等操作。

### 1.2 常见的数据库及分类

* MySQL 数据库（目前使用最广泛，流行度最高的开源且免费数据库 Community + Enterprise）
* Oracle 数据库（收费）
* SQL Server 数据库（收费）
* MongoDB 数据库（Community + Enterprise）

其中，MySQL、Oracle、SQL Server 属于**传统型数据库**（又叫做：**关系型数据库** 或 **SQL 数据库**），这三者设计理念相同，用法比较类似。

MonoDB 属于**新型数据库**（又叫做：**非关系型数据库** 或 **NoSQL 数据库**），它在一定程度上弥补了传统型数据库的缺陷。

### 1.3 传统型数据库的数据组织结构

数据的组织结构：指的就是数据以什么样的结构进行存储。传统型数据库的数据组织结构和 Excel 比较相似。

#### 1. Excel 的数据组织结构

每个 Excel 中，数据的组织结构分别为**工作簿**、**工作表**、**数据行**、**列**这 4 大部分组成。

<img src="../../resource/excel组织结构.png" align="left" />

* 整个 Excel 叫做工作簿
* users 和 books 是工作表
* users 工作表中有3行数据
* 每行数据有6列信息组成
* 每列信息都有对应的数据类型

#### 2. 传统型数据库的数据组织结构

在传统型数据库中，数据的组织结构分为**数据库(database)**、**数据表(table)**、**数据行(row)**、**字段(field)**这 4 大部分组成。

* 数据库相当于工作簿
* 数据表相当于工作表
* 数据行相当于每一行
* 字段相当于每一行的每一列
* 每个字段都有对应的类型

#### 3. 实际开发中库、表、行、字段的关系

* 在实际项目开发中，一般情况下，每个项目**都对应独立的数据库**
* 不同的数据，要存储到数据库的不同表中，例如：用户数据存储到 users 表中，图书数据存储到 books 表中
* 每个表中具体存储哪些信息，由字段来决定，例如：我们可以为 users 表设计 id、username、password 这 3 个字段
* 表中的行，代表每一条具体的数据

# 2. 安装并配置 MySQL

对于开发人员来说，只需要安装 **MySQL Server** 和 **MySQL Workbench** 这两个软件，就能满足开发的需要了

* MySQL Server：专门用来提供数据存储和服务的软件
* MySQL Workbench：可视化的 MySQL 管理工具

